# .github/workflows/notify-discord.yml
# Dieser Workflow sendet eine Benachrichtigung an Discord, nachdem der Haupt-Release-Workflow erfolgreich war
# und ihn ausgelöst hat.
name: Notify Discord on Release

on:
  workflow_dispatch: # Ermöglicht manuelles Auslösen und Auslösen durch andere Workflows
    inputs:
      release_tag:
        description: 'The tag of the release to notify about'
        required: true
        type: string
  workflow_run: # Fallback, falls der Dispatch vom Hauptworkflow nicht klappt oder für andere Szenarien
    workflows: [ "Release CI - Main" ]
    types:
      - completed

jobs:
  discord_notification:
    name: Send Discord Notification
    runs-on: ubuntu-latest
    # Nur ausführen, wenn der Hauptworkflow erfolgreich ('success') abgeschlossen wurde (für workflow_run)
    # oder wenn manuell/per Dispatch mit Tag ausgelöst
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Determine Release Tag
        id: get_tag
        run: |
          TAG_NAME=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG_NAME="${{ github.event.inputs.release_tag }}"
            echo "Received tag from workflow_dispatch: ${TAG_NAME}"
          elif [[ "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
            # head_branch im workflow_run Event ist der Name des Tags
            TAG_NAME="${{ github.event.workflow_run.head_branch }}"
            echo "Triggering tag from workflow_run.head_branch: ${TAG_NAME}"
            if [[ -z "$TAG_NAME" ]]; then
              echo "Error: Could not determine release tag from the triggering workflow's head_branch (workflow_run)."
              # Fallback, falls head_branch leer ist (sollte bei Tag-Push nicht passieren)
              COMMIT_SHA="${{ github.event.workflow_run.head_sha }}"
              echo "Attempting to find tag for commit SHA: ${COMMIT_SHA}"
              # Checkout ist hier nicht ideal, da es den Code des *dieses* Workflows auscheckt,
              # nicht den des auslösenden. Besser ist es, wenn der Tag zuverlässig übergeben wird.
              # Für diesen Fall verlassen wir uns darauf, dass TAG_NAME übergeben wurde oder head_branch korrekt ist.
              # Wenn beides fehlschlägt, wird die Discord-Action wahrscheinlich die 'latest' Release nehmen.
            fi
          else
            echo "Workflow wurde weder per Dispatch noch durch einen erfolgreichen 'Release CI - Main' Lauf getriggert. Überspringe."
            exit 1 # Oder eine andere geeignete Fehlerbehandlung
          fi

          if [[ -z "$TAG_NAME" ]]; then
            echo "Error: Release tag could not be determined."
            exit 1
          fi
          echo "Final tag for Discord notification: ${TAG_NAME}"
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Send GitHub Release to Discord
        # Nur ausführen, wenn ein Tag erfolgreich ermittelt wurde
        if: steps.get_tag.outputs.tag_name != ''
        uses: SethCohen/github-releases-to-discord@v1.16.2
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          tag_name: ${{ steps.get_tag.outputs.tag_name }} # Explizite Übergabe des Tags
          color: "2105893"
          username: "Randomizer-CS2"
          avatar_url: "https://raw.githubusercontent.com/bsommerfeld/randomizer-cs2/refs/heads/master/.randomizer/design/logo/randomizer.png"
          content: "@everyone"
          footer_title: "Changelog"
          footer_icon_url: "https://raw.githubusercontent.com/bsommerfeld/randomizer-cs2/refs/heads/master/.randomizer/design/logo/randomizer.png"
          footer_timestamp: true
          max_description: '4096'
          reduce_headings: true
